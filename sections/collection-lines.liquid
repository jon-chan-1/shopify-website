<div class="container">
  <div class="row">
    <div class="col-12">
      {% include 'breadcrumb' %}
    </div>
  </div>
  <div class="row">
    <div class="col-12">
      <h1 class="collection-title">
        {{ collection.title | upcase }}
      </h1>
    </div>
  </div>
  <div class="row d-md-none justify-content-center">
    <button class="btn mobile-sort-button" type="button" data-toggle="modal" data-target="#sidebar-filter-mobile">
      <span class="float-left">
        Filters
      </span>
      <span class="float-right">
        <i class="fas fa-chevron-down"></i>
      </span>
    </button>
    <button class="btn mobile-sort-button" type="button" data-toggle="modal" data-target="#sort-by-mobile">
      <span class="float-left">
        Sort By
      </span>
      <span class="float-right">
        <i class="fas fa-chevron-down"></i>
      </span>
    </button>
    <div class="modal fade" id="sidebar-filter-mobile" tabindex="-1" role="dialog" aria-labelledby="sidebar-filter-mobile" aria-hidden="true">
      <div class="modal-dialog" role="document">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="sidebar-filter-mobile-title">Filters</h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
              <i class="fas fa-times"></i>
            </button>
          </div>
          <div class="modal-body">
            <div class="sidebar-filter active sidebar-filter-mobile">
            </div>
          </div>
        </div>
      </div>
    </div>
    <div class="modal fade" id="sort-by-mobile" tabindex="-1" role="dialog" aria-labelledby="sort-by-mobile" aria-hidden="true">
      <div class="modal-dialog" role="document">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="sort-by-mobile-title">Filters</h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
              <i class="fas fa-times"></i>
            </button>
          </div>
          <div class="modal-body">
            <a class="dropdown-item" href="{{ request.path }}?sort_by=manual">Featured</a>
            <a class="dropdown-item" href="{{ request.path }}?sort_by=best-selling">Best Selling</a>
            <a class="dropdown-item" href="{{ request.path }}?sort_by=title-ascending">Alphabetically, A-Z</a>
            <a class="dropdown-item" href="{{ request.path }}?sort_by=title-descending">Alphabetically, Z-A</a>
            <a class="dropdown-item" href="{{ request.path }}?sort_by=price-ascending">Price, low to high</a>
            <a class="dropdown-item" href="{{ request.path }}?sort_by=price-descending">Price, high to low</a>
            <a class="dropdown-item" href="{{ request.path }}?sort_by=created-descending">Date, new to old</a>
            <a class="dropdown-item" href="{{ request.path }}?sort_by=created-ascending">Date, old to new</a>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div class="row">
    <div class="col-md-2">
      <div class="sidebar-filter active sidebar-filter-desktop">
      </div>
    </div>
    <div class="col-md-10">
      <div class="row d-none d-md-flex">
        <div class="col-12">
          <div class="float-right">
            {% include 'collection-sorting' %}
          </div>
        </div>
      </div>
      <div class="row">
        <div class="col-12">
          <div id="product-grid">
          </div>
        </div>
      </div>
      <div class="row">
        <div class="col-12">
          <div id="paginate">
            {%- paginate collection.products by 50 -%}
              {% include 'pagination-custom' %}
            {%- endpaginate -%}
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<div class="product-data" style="visibility: hidden;display: none;">
  <table>
    <tr>
      <th>link</th>
      <th>image</th>
      <th>title</th>
      <th>compare_at_price</th>
      <th>price</th>
      <th>product_line</th>
      <th>id</th>
    </tr>
    {%- paginate collection.products by 50 -%}
      {%- for product in collection.products -%}
        <tr>
          <td>{{ product.url | within: collection }}</td>
          <td>{{ product | img_url: '500x500' }}</td>
          <td>{{ product.title }}</td>
          <td>{{ product.compare_at_price | money}}</td>
          <td>From {{ product.price_min | money }}</td>
          <td>{{ product.vendor }}</td>
          <td>{{ product.id }}</td>
        </tr>
      {%- endfor -%}
    {%- endpaginate -%}
  </table>
  <table class="hidden-tags">
    <tr>
      <th>tag</th>
      <th>link</th>
      <th>active</th>
    </tr>
    {% capture base_url %}{{ shop.url }}{{ collection.url }}{% endcapture %}
    {% if base_url == canonical_url %}
      {% for tag in collection.all_tags %}
        <tr>
          <td>{{ tag }}</td>
          <td>{{ tag | link_to_add_tag: tag }}</td>
          <td>false</td>
        </tr>
      {% endfor %}
    {% else %}
      {% for tag in collection.tags %}
        <tr>
        {% if current_tags contains tag %}
          <td>{{ tag }}</td>
          <td>{{ tag | link_to_remove_tag: tag }}</td>
          <td>true</td>
        {% else %}
          <td>{{ tag }}</td>
          <td>{{ tag | link_to_add_tag: tag }}</td>
          <td>false</td>
        {% endif %}
        </tr>
      {% endfor %}
    {% endif %}
  </table>
</div>

{% schema %}
  {
    "name": "collection-lines",
    "settings": [],
	"class": "collection-lines-section"
  }
{% endschema %}

{% stylesheet %}

.collection-title {
  text-align: center;
  font-family: Prompt;
  font-size: 24px;
  font-weight: bold;
  line-height: 2.67;
  letter-spacing: 2px;
  text-align: center;
  color: #505d68;
}

#paginate {
  text-align: center;
}

.sort-by-filter {
  text-align: right;
  padding-right: 50px;
}

.product-line > h4 {
  flex-grow: 0;
}

.product-tile {
  stroke: #000000;
  stroke-width: 1px;
}

.scrollable-menu {
  height: auto;
  max-height: 220px;
  overflow-x: hidden;
}

.input-group-append {
  width: 100%;
}

.filter-button {
  width: 100%;
  margin-bottom: 10px;
  white-space: normal;
}

.input-group > .input-group-append > .filter-button {
  height: auto;
}

.filter-active {
  color: #fff;
  background-color: #6c757d;
  border-color: #6c757d;
}

@media (max-width: 767.98px) {
  .card.product > a > img.product-grid {
    height: 28vw;
  }

  .sidebar-filter-desktop {
    display: none;
  }
}

.product-tile {
  height: 100%;
}

.mobile-sort-button {
  background-color: white;
  color: #505d68;
  font-family: Muli;
  font-size: 14px;
  font-weight: bold;
  border-radius: 0px;
  border: 1px solid #979797;
  width: 30%;
}

.mobile-sort-button:hover {
  background-color: #b90b00;
}

.product-line-title {
  font-family: Muli;
  font-size: 16px;
  font-weight: bold;
  line-height: 2;
  letter-spacing: 1.5px;
  color: #b90b00;
  margin-bottom: 0px;
}

.product-row-desktop {
  margin-bottom: 12px;
}

{% endstylesheet %}

{% javascript %}
$(document).ready(function(){
  var filterTable = $(".product-data .hidden-tags tbody")[0].children;
  var filters = filterArray(filterTable);
  buildFilters(filters);

  var productTable = $(".product-data table tbody")[0].children;
  var productLines = productArray(productTable);

  loopProductLines(productLines);
});

function productArray(table) {
  var i;
  var hash = {};

  for (i = 1; i < table.length; i++) {
    var row = table[i].children;
    var url = row[0].innerHTML;
    var image_url = row[1].innerHTML;
    var title = row[2].innerHTML;
    var sale_price = row[3].innerHTML;
    var price = row[4].innerHTML;
    var line = row[5].innerHTML;
    var id = row[6].innerHTML;

    if (!hash[line]) hash[line] = new Array;
    hash[line].push({
      url: url,
      image_url: image_url,
      title: title,
      sale_price: sale_price,
      price: price,
      id: id
    });
  };

  var array = [];
  for (var key in hash) {
    array.push({ [key]: hash[key] })
  };

  return array;
};

function filterArray(table) {
  var i;
  var hash = {};

  for (i = 1; i < table.length; i++) {
    var row = table[i].children;
    var tag = row[0].innerHTML;
    var link = row[1].innerHTML;
    var hrefIndex = link.indexOf("href=");
    var href = link.slice(hrefIndex, link.indexOf("\"", hrefIndex + 8) + 1);
    var active = row[2].innerHTML;
    var split = tag.split("|");

    if (split.length > 1) {
      if (!hash[split[0]]) hash[split[0]] = new Array;
      hash[split[0]].push({
        tag: split[1],
        href: href,
        active: active
      });
    };
  };

  return hash;
};

function buildFilters(filters) {
  [0, 1].forEach(function(i) {
      var sidebar = $('.sidebar-filter')[i];
      for (var filterGroup in filters) {
        $(newFilterGroup(filterGroup)).appendTo(sidebar);

        var dropdownMenu = $('.dropdown-menu-' + formatLine(filterGroup) + ' > ul')[i];

        var options = filters[filterGroup];
        for (var index in options) {
          var filter = options[index];
          var isActive = filter.active == "true" ? "checked" : "";

          if (isActive == "checked") {
            $('.filter-button-' + formatLine(filterGroup) + ':first').addClass("filter-active")
          };
          $(newFilterItem(filter.href, filter.tag, isActive)).appendTo(dropdownMenu);
        };
      };
    }
  )
}

function newFilterGroup(filterGroup) {
  return '\
<div class="input-group">\
  <div class="input-group-append">\
    <button class="btn btn-outline-secondary dropdown-toggle filter-button filter-button-' + formatLine(filterGroup) + '" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">' + filterGroup + '</button>\
    <div class="dropdown-menu scrollable-menu dropdown-menu-' + formatLine(filterGroup) + '">\
      <ul/>\
    </div>\
  </div>\
</div>\
  '
};

function newFilterItem(link, tag, isActive) {
  return '\
<li>\
  <a '+ link + ' class="dropdown-item">\
    <input type="checkbox" onclick="window.location=\'' + link.slice(link.indexOf('"')+1, link.length-1) + '\';" ' + isActive + '>\
    ' + tag + '\
  </a>\
</li>\
  '
};

function loopProductLines(productLines) {
  for (var productLineIndex in productLines) {
    var line = productLines[productLineIndex];
    loopProductLine(line);
  };
};

function loopProductLine(line) {
  for (var title in line) {
    var productLine = line[title];

    buildLineTitle(title);
    var count = productLine.length;
    buildRows(count, title);

    var productIndex = 0;

    for (var product in productLine) {
      buildProductTile(productLine[product], formatLine(title) + "-" + productIndex);
      buildProductTile(productLine[product], formatLine(title) + "-mobile-" + productIndex);
      productIndex += 1;
    };
  };
};

function buildLineTitle(title) {
  var productGrid = $('#product-grid');

  $('<div class="product-line d-flex mt-18"><h4 class="product-line-title">' + title + '</h4><div class="divider-line"></div></div>').appendTo(productGrid);
};

function buildRows(count, line) {
  var rowsCount = Math.ceil(count/4);
  var mobileRowsCount = Math.ceil(count/2);
  var productCount = 0;
  var productGrid = $('#product-grid');
  for (var i=0; i < rowsCount; i++) {
    $(newRow(i, line)).appendTo(productGrid);
  };
  for (var i=0; i < mobileRowsCount; i++) {
    $(newMobileRow(i, line)).appendTo(productGrid);
  };
};

function newRow(n, line) {
  var row = '<div class="row d-none d-md-flex product-row-desktop">'
  for (var i = 0; i < 4; i++) {
    row += newTile(formatLine(line) + "-" + (n*4 + i))
  };

  return row + '</div>'
};

function formatLine(line) {
  return line.replace(/ /g, "");
};

function newTile(id) {
  return '<div class="col-md-3"><div id="' + id + '"class="product-tile"></div></div>'
};

function buildProductTile(product, id) {
  var productDiv = $("#"+id);
  $(newCard(product)).appendTo(productDiv);

  return
};

function newMobileRow(n, line) {
  var row = '<div class="row d-md-none">';
  for (var i = 0; i < 2; i++) {
    row += newMobileTile(formatLine(line) + "-mobile-" + (n*2 + i))
  };

  return row + '</div>'
};

function newMobileTile(id) {
  return '<div class="col-6"><div id="' + id + '"></div></div>'
};

function newCard(product) {
  var card = `
    <div class="card product">
      <a href="` + product.url + `">
        <img class="card-img-top img-fluid product-grid" src="` + product.image_url + `" alt="Card image cap">
        <div class="card-body">
          <p class="card-text">` + product.title + `</p>
          <p class="card-text">` + product.price + `</p>
        </div>
      </a>
    </div>
  `;
  return card;
};

{% endjavascript %}
